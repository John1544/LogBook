<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>